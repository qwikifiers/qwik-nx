// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integrations/react-library generator should generate demo component without MUI dependencies 1`] = `
Object {
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "name": "mylib",
  "projectType": "library",
  "root": "libs/mylib",
  "sourceRoot": "libs/mylib/src",
  "tags": Array [],
  "targets": Object {
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "libs/mylib/**/*.{ts,tsx,js,jsx}",
        ],
      },
      "outputs": Array [
        "{options.outputFile}",
      ],
    },
    "test": Object {
      "executor": "@nrwl/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../coverage/libs/mylib",
      },
      "outputs": Array [
        "../..//coverage/libs/mylib",
      ],
    },
  },
}
`;

exports[`integrations/react-library generator should generate demo component without MUI dependencies 2`] = `
"import { qwikVite } from '@builder.io/qwik/optimizer';
import tsconfigPaths from 'vite-tsconfig-paths';
import { defineConfig } from 'vite';
import { qwikNxVite } from 'qwik-nx/plugins';
import { qwikReact } from '@builder.io/qwik-react/vite';
export default defineConfig({
  cacheDir: '../../node_modules/.vite/libs/mylib',
  plugins: [
    qwikNxVite(),
    qwikVite(),
    tsconfigPaths({ root: '../../' }),
    qwikReact(),
  ],
  test: {
    globals: true,
    cache: {
      dir: '../../node_modules/.vitest',
    },
    environment: 'node',
    include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
    coverage: {
      reportsDirectory: '../../coverage/libs/mylib',
    },
  },
});
"
`;

exports[`integrations/react-library generator should generate demo component without MUI dependencies 3`] = `
Array [
  Object {
    "path": ".eslintignore",
    "type": "CREATE",
  },
  Object {
    "path": ".eslintrc.json",
    "type": "CREATE",
  },
  Object {
    "path": ".prettierignore",
    "type": "CREATE",
  },
  Object {
    "path": ".prettierrc",
    "type": "CREATE",
  },
  Object {
    "path": "apps/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "libs/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/.eslintrc.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/project.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/README.md",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/src/index.ts",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/src/lib/integration/demo.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/src/root.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/tsconfig.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/tsconfig.lib.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/tsconfig.spec.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/vite.config.ts",
    "type": "CREATE",
  },
  Object {
    "path": "nx.json",
    "type": "CREATE",
  },
  Object {
    "path": "package.json",
    "type": "CREATE",
  },
  Object {
    "path": "tsconfig.base.json",
    "type": "CREATE",
  },
]
`;

exports[`integrations/react-library generator should run successfully 1`] = `
Object {
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "name": "mylib",
  "projectType": "library",
  "root": "libs/mylib",
  "sourceRoot": "libs/mylib/src",
  "tags": Array [],
  "targets": Object {
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "libs/mylib/**/*.{ts,tsx,js,jsx}",
        ],
      },
      "outputs": Array [
        "{options.outputFile}",
      ],
    },
    "test": Object {
      "executor": "@nrwl/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../coverage/libs/mylib",
      },
      "outputs": Array [
        "../..//coverage/libs/mylib",
      ],
    },
  },
}
`;

exports[`integrations/react-library generator should run successfully 2`] = `
"import { qwikVite } from '@builder.io/qwik/optimizer';
import tsconfigPaths from 'vite-tsconfig-paths';
import { defineConfig } from 'vite';
import { qwikNxVite } from 'qwik-nx/plugins';
import { qwikReact } from '@builder.io/qwik-react/vite';
export default defineConfig({
  cacheDir: '../../node_modules/.vite/libs/mylib',
  plugins: [
    qwikNxVite(),
    qwikVite(),
    tsconfigPaths({ root: '../../' }),
    qwikReact(),
  ],
  test: {
    globals: true,
    cache: {
      dir: '../../node_modules/.vitest',
    },
    environment: 'node',
    include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
    coverage: {
      reportsDirectory: '../../coverage/libs/mylib',
    },
  },
});
"
`;

exports[`integrations/react-library generator should run successfully 3`] = `
Array [
  Object {
    "path": ".eslintignore",
    "type": "CREATE",
  },
  Object {
    "path": ".eslintrc.json",
    "type": "CREATE",
  },
  Object {
    "path": ".prettierignore",
    "type": "CREATE",
  },
  Object {
    "path": ".prettierrc",
    "type": "CREATE",
  },
  Object {
    "path": "apps/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "libs/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/.eslintrc.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/project.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/README.md",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/src/index.ts",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/src/lib/integration/mui.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/src/root.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/tsconfig.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/tsconfig.lib.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/tsconfig.spec.json",
    "type": "CREATE",
  },
  Object {
    "path": "libs/mylib/vite.config.ts",
    "type": "CREATE",
  },
  Object {
    "path": "nx.json",
    "type": "CREATE",
  },
  Object {
    "path": "package.json",
    "type": "CREATE",
  },
  Object {
    "path": "tsconfig.base.json",
    "type": "CREATE",
  },
]
`;

exports[`integrations/react-library generator should update app config if provided: myapp1 1`] = `
"import { qwikVite } from '@builder.io/qwik/optimizer';
import { qwikCity } from '@builder.io/qwik-city/vite';
import { defineConfig } from 'vite';
import tsconfigPaths from 'vite-tsconfig-paths';
import { qwikNxVite } from 'qwik-nx/plugins';
import { qwikReact } from '@builder.io/qwik-react/vite';
export default defineConfig({
  cacheDir: '../../node_modules/.vite/apps/myapp1',
  plugins: [
    qwikNxVite(),
    qwikCity(),
    qwikVite({
      client: {
        outDir: '../../dist/apps/myapp1/client',
      },
      ssr: {
        outDir: '../../dist/apps/myapp1/server',
      },
    }),
    tsconfigPaths({ root: '../../' }),
    qwikReact(),
  ],
  server: {
    fs: {
      // Allow serving files from the project root
      allow: ['../../'],
    },
  },
  preview: {
    headers: {
      'Cache-Control': 'public, max-age=600',
    },
  },
  test: {
    globals: true,
    cache: {
      dir: '../../node_modules/.vitest',
    },
    environment: 'node',
    include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
  },
});
"
`;

exports[`integrations/react-library generator should update app config if provided: myapp2 1`] = `
"import { qwikVite } from '@builder.io/qwik/optimizer';
import { qwikCity } from '@builder.io/qwik-city/vite';
import { defineConfig } from 'vite';
import tsconfigPaths from 'vite-tsconfig-paths';
import { qwikNxVite } from 'qwik-nx/plugins';
import { qwikReact } from '@builder.io/qwik-react/vite';
export default defineConfig({
  cacheDir: '../../node_modules/.vite/apps/myapp2',
  plugins: [
    qwikNxVite(),
    qwikCity(),
    qwikVite({
      client: {
        outDir: '../../dist/apps/myapp2/client',
      },
      ssr: {
        outDir: '../../dist/apps/myapp2/server',
      },
    }),
    tsconfigPaths({ root: '../../' }),
    qwikReact(),
  ],
  server: {
    fs: {
      // Allow serving files from the project root
      allow: ['../../'],
    },
  },
  preview: {
    headers: {
      'Cache-Control': 'public, max-age=600',
    },
  },
  test: {
    globals: true,
    cache: {
      dir: '../../node_modules/.vitest',
    },
    environment: 'node',
    include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
  },
});
"
`;
