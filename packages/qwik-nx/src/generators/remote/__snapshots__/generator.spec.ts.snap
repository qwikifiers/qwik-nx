// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`remote generator should be able to resolve directory path based on the workspace layout when directory is "/apps/frontend" should generate "frontend-myremote" with project's root at "apps/frontend/myremote": "/apps/frontend" 1`] = `
Object {
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "name": "frontend-myremote",
  "projectType": "application",
  "root": "apps/frontend/myremote",
  "sourceRoot": "apps/frontend/myremote/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myremote",
        "runSequence": Array [
          "frontend-myremote:build.client",
          "frontend-myremote:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "apps/frontend/myremote/vite.config.ts",
        "outputPath": "dist/apps/frontend/myremote",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myremote",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "apps/frontend/myremote",
      },
    },
    "test": Object {
      "executor": "@nx/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../../coverage/apps/frontend/myremote",
      },
      "outputs": Array [
        "{options.reportsDirectory}",
      ],
    },
  },
}
`;

exports[`remote generator should be able to resolve directory path based on the workspace layout when directory is "/frontend" should generate "frontend-myremote" with project's root at "apps/frontend/myremote": "/frontend" 1`] = `
Object {
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "name": "frontend-myremote",
  "projectType": "application",
  "root": "apps/frontend/myremote",
  "sourceRoot": "apps/frontend/myremote/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myremote",
        "runSequence": Array [
          "frontend-myremote:build.client",
          "frontend-myremote:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "apps/frontend/myremote/vite.config.ts",
        "outputPath": "dist/apps/frontend/myremote",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myremote",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "apps/frontend/myremote",
      },
    },
    "test": Object {
      "executor": "@nx/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../../coverage/apps/frontend/myremote",
      },
      "outputs": Array [
        "{options.reportsDirectory}",
      ],
    },
  },
}
`;

exports[`remote generator should be able to resolve directory path based on the workspace layout when directory is "/packages" should generate "myremote" with project's root at "packages/myremote": "/packages" 1`] = `
Object {
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "name": "myremote",
  "projectType": "application",
  "root": "packages/myremote",
  "sourceRoot": "packages/myremote/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/packages/myremote",
        "runSequence": Array [
          "myremote:build.client",
          "myremote:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "packages/myremote/vite.config.ts",
        "outputPath": "dist/packages/myremote",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/packages/myremote",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "myremote:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "myremote:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "packages/myremote",
      },
    },
    "test": Object {
      "executor": "@nx/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../coverage/packages/myremote",
      },
      "outputs": Array [
        "{options.reportsDirectory}",
      ],
    },
  },
}
`;

exports[`remote generator should be able to resolve directory path based on the workspace layout when directory is "/packages/frontend" should generate "frontend-myremote" with project's root at "packages/frontend/myremote": "/packages/frontend" 1`] = `
Object {
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "name": "frontend-myremote",
  "projectType": "application",
  "root": "packages/frontend/myremote",
  "sourceRoot": "packages/frontend/myremote/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/packages/frontend/myremote",
        "runSequence": Array [
          "frontend-myremote:build.client",
          "frontend-myremote:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "packages/frontend/myremote/vite.config.ts",
        "outputPath": "dist/packages/frontend/myremote",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/packages/frontend/myremote",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "packages/frontend/myremote",
      },
    },
    "test": Object {
      "executor": "@nx/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../../coverage/packages/frontend/myremote",
      },
      "outputs": Array [
        "{options.reportsDirectory}",
      ],
    },
  },
}
`;

exports[`remote generator should be able to resolve directory path based on the workspace layout when directory is "apps" should generate "myremote" with project's root at "apps/myremote": "apps" 1`] = `
Object {
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "name": "myremote",
  "projectType": "application",
  "root": "apps/myremote",
  "sourceRoot": "apps/myremote/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/apps/myremote",
        "runSequence": Array [
          "myremote:build.client",
          "myremote:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "apps/myremote/vite.config.ts",
        "outputPath": "dist/apps/myremote",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/apps/myremote",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "myremote:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "myremote:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "apps/myremote",
      },
    },
    "test": Object {
      "executor": "@nx/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../coverage/apps/myremote",
      },
      "outputs": Array [
        "{options.reportsDirectory}",
      ],
    },
  },
}
`;

exports[`remote generator should be able to resolve directory path based on the workspace layout when directory is "apps/frontend" should generate "frontend-myremote" with project's root at "apps/frontend/myremote": "apps/frontend" 1`] = `
Object {
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "name": "frontend-myremote",
  "projectType": "application",
  "root": "apps/frontend/myremote",
  "sourceRoot": "apps/frontend/myremote/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myremote",
        "runSequence": Array [
          "frontend-myremote:build.client",
          "frontend-myremote:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "apps/frontend/myremote/vite.config.ts",
        "outputPath": "dist/apps/frontend/myremote",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myremote",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "frontend-myremote:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "apps/frontend/myremote",
      },
    },
    "test": Object {
      "executor": "@nx/vite:test",
      "options": Object {
        "passWithNoTests": true,
        "reportsDirectory": "../../../coverage/apps/frontend/myremote",
      },
      "outputs": Array [
        "{options.reportsDirectory}",
      ],
    },
  },
}
`;

exports[`remote generator should run successfully 1`] = `
"import { qwikVite } from '@builder.io/qwik/optimizer';
import { qwikCity } from '@builder.io/qwik-city/vite';
import { defineConfig } from 'vite';
import tsconfigPaths from 'vite-tsconfig-paths';
import { qwikNxVite } from 'qwik-nx/plugins';

export default defineConfig({
  cacheDir: '../../node_modules/.vite/apps/myremote',
  plugins: [
    qwikNxVite(),
    qwikCity(),
    qwikVite({
      client: {
        outDir: '../../dist/apps/myremote/client',
      },
      ssr: {
        outDir: '../../dist/apps/myremote/server',
      },
      tsconfigFileNames: ['tsconfig.app.json'],
    }),
    tsconfigPaths({ root: '../../' }),
  ],
  server: {
    fs: {
      // Allow serving files from the project root
      allow: ['../../'],
    },
  },
  preview: {
    headers: {
      'Cache-Control': 'public, max-age=600',
    },
  },
  test: {
    globals: true,
    cache: {
      dir: '../../node_modules/.vitest',
    },
    environment: 'node',
    include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
  },
});
"
`;

exports[`remote generator should run successfully 2`] = `
"{
  \\"name\\": \\"myremote\\",
  \\"$schema\\": \\"../../node_modules/nx/schemas/project-schema.json\\",
  \\"projectType\\": \\"application\\",
  \\"sourceRoot\\": \\"apps/myremote/src\\",
  \\"targets\\": {
    \\"build\\": {
      \\"executor\\": \\"qwik-nx:build\\",
      \\"options\\": {
        \\"runSequence\\": [\\"myremote:build.client\\", \\"myremote:build.ssr\\"],
        \\"outputPath\\": \\"dist/apps/myremote\\"
      },
      \\"configurations\\": {
        \\"preview\\": {}
      }
    },
    \\"build.client\\": {
      \\"executor\\": \\"@nx/vite:build\\",
      \\"options\\": {
        \\"outputPath\\": \\"dist/apps/myremote\\",
        \\"configFile\\": \\"apps/myremote/vite.config.ts\\"
      }
    },
    \\"build.ssr\\": {
      \\"executor\\": \\"@nx/vite:build\\",
      \\"defaultConfiguration\\": \\"preview\\",
      \\"options\\": {
        \\"outputPath\\": \\"dist/apps/myremote\\"
      },
      \\"configurations\\": {
        \\"preview\\": {
          \\"ssr\\": \\"src/entry.preview.tsx\\",
          \\"mode\\": \\"production\\"
        }
      }
    },
    \\"preview\\": {
      \\"executor\\": \\"@nx/vite:preview-server\\",
      \\"options\\": {
        \\"buildTarget\\": \\"myremote:build\\",
        \\"port\\": 4173
      }
    },
    \\"test\\": {
      \\"executor\\": \\"@nx/vite:test\\",
      \\"outputs\\": [\\"{options.reportsDirectory}\\"],
      \\"options\\": {
        \\"passWithNoTests\\": true,
        \\"reportsDirectory\\": \\"../../coverage/apps/myremote\\"
      }
    },
    \\"serve\\": {
      \\"executor\\": \\"@nx/vite:dev-server\\",
      \\"options\\": {
        \\"buildTarget\\": \\"myremote:build.client\\",
        \\"mode\\": \\"ssr\\",
        \\"port\\": 5173
      }
    },
    \\"serve.debug\\": {
      \\"executor\\": \\"nx:run-commands\\",
      \\"options\\": {
        \\"command\\": \\"node --inspect-brk ../../node_modules/vite/bin/vite.js --mode ssr --force\\",
        \\"cwd\\": \\"apps/myremote\\"
      }
    }
  },
  \\"tags\\": []
}
"
`;

exports[`remote generator should run successfully 3`] = `
Array [
  Object {
    "path": ".prettierignore",
    "type": "CREATE",
  },
  Object {
    "path": ".prettierrc",
    "type": "CREATE",
  },
  Object {
    "path": "apps/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/.eslintrc.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/.prettierignore",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/package.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/project.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/public/favicon.svg",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/public/manifest.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/public/robots.txt",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/README.md",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/components/.gitkeep",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/components/header/header.,",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/entry.dev.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/entry.preview.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/entry.ssr.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/global.,",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/root.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/routes/about/index.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/routes/index.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/routes/layout.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/src/routes/service-worker.ts",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/tsconfig.app.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/tsconfig.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/tsconfig.spec.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myremote/vite.config.ts",
    "type": "CREATE",
  },
  Object {
    "path": "libs/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "nx.json",
    "type": "CREATE",
  },
  Object {
    "path": "package.json",
    "type": "CREATE",
  },
  Object {
    "path": "tsconfig.base.json",
    "type": "CREATE",
  },
]
`;
