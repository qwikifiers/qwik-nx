// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`qwik-nx generator should be able to resolve directory path based on the workspace layout when directory is "apps/frontend/myapp" should generate "myapp" with project's root at "apps/frontend/myapp": "apps/frontend/myapp" 1`] = `
Object {
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "name": "myapp",
  "projectType": "application",
  "root": "apps/frontend/myapp",
  "sourceRoot": "apps/frontend/myapp/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myapp",
        "runSequence": Array [
          "myapp:build.client",
          "myapp:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "apps/frontend/myapp/vite.config.ts",
        "outputPath": "dist/apps/frontend/myapp",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/apps/frontend/myapp",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "myapp:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "myapp:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "apps/frontend/myapp",
      },
    },
  },
}
`;

exports[`qwik-nx generator should be able to resolve directory path based on the workspace layout when directory is "libs/frontend/myapp" should generate "myapp" with project's root at "libs/frontend/myapp": "libs/frontend/myapp" 1`] = `
Object {
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "name": "myapp",
  "projectType": "application",
  "root": "libs/frontend/myapp",
  "sourceRoot": "libs/frontend/myapp/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/libs/frontend/myapp",
        "runSequence": Array [
          "myapp:build.client",
          "myapp:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "libs/frontend/myapp/vite.config.ts",
        "outputPath": "dist/libs/frontend/myapp",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/libs/frontend/myapp",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "myapp:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "myapp:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "libs/frontend/myapp",
      },
    },
  },
}
`;

exports[`qwik-nx generator should be able to resolve directory path based on the workspace layout when directory is "packages/frontend/myapp" should generate "myapp" with project's root at "packages/frontend/myapp": "packages/frontend/myapp" 1`] = `
Object {
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "name": "myapp",
  "projectType": "application",
  "root": "packages/frontend/myapp",
  "sourceRoot": "packages/frontend/myapp/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "preview": Object {},
      },
      "executor": "qwik-nx:build",
      "options": Object {
        "outputPath": "dist/packages/frontend/myapp",
        "runSequence": Array [
          "myapp:build.client",
          "myapp:build.ssr",
        ],
      },
    },
    "build.client": Object {
      "executor": "@nx/vite:build",
      "options": Object {
        "configFile": "packages/frontend/myapp/vite.config.ts",
        "outputPath": "dist/packages/frontend/myapp",
      },
    },
    "build.ssr": Object {
      "configurations": Object {
        "preview": Object {
          "mode": "production",
          "ssr": "src/entry.preview.tsx",
        },
      },
      "defaultConfiguration": "preview",
      "executor": "@nx/vite:build",
      "options": Object {
        "outputPath": "dist/packages/frontend/myapp",
      },
    },
    "preview": Object {
      "executor": "@nx/vite:preview-server",
      "options": Object {
        "buildTarget": "myapp:build",
        "port": 4173,
      },
    },
    "serve": Object {
      "executor": "@nx/vite:dev-server",
      "options": Object {
        "buildTarget": "myapp:build.client",
        "mode": "ssr",
        "port": 5173,
      },
    },
    "serve.debug": Object {
      "executor": "nx:run-commands",
      "options": Object {
        "command": "node --inspect-brk ../../../node_modules/vite/bin/vite.js --mode ssr --force",
        "cwd": "packages/frontend/myapp",
      },
    },
  },
}
`;

exports[`qwik-nx generator should run successfully 1`] = `
"import { qwikVite } from '@builder.io/qwik/optimizer';
import { qwikCity } from '@builder.io/qwik-city/vite';
import { defineConfig } from 'vite';
import tsconfigPaths from 'vite-tsconfig-paths';

export default defineConfig({
  cacheDir: '../../node_modules/.vite/apps/myapp',
  root: 'apps/myapp',
  plugins: [
    qwikCity(),
    qwikVite({
      client: {
        outDir: '../../dist/apps/myapp/client',
      },
      ssr: {
        outDir: '../../dist/apps/myapp/server',
      },
      tsconfigFileNames: ['tsconfig.app.json'],
    }),
    tsconfigPaths({ root: '../../' }),
  ],
  server: {
    fs: {
      // Allow serving files from the project root
      allow: ['../../'],
    },
  },
  preview: {
    headers: {
      'Cache-Control': 'public, max-age=600',
    },
  },
});
"
`;

exports[`qwik-nx generator should run successfully 2`] = `
"{
  \\"name\\": \\"myapp\\",
  \\"$schema\\": \\"../../node_modules/nx/schemas/project-schema.json\\",
  \\"projectType\\": \\"application\\",
  \\"sourceRoot\\": \\"apps/myapp/src\\",
  \\"targets\\": {
    \\"build\\": {
      \\"executor\\": \\"qwik-nx:build\\",
      \\"options\\": {
        \\"runSequence\\": [\\"myapp:build.client\\", \\"myapp:build.ssr\\"],
        \\"outputPath\\": \\"dist/apps/myapp\\"
      },
      \\"configurations\\": {
        \\"preview\\": {}
      }
    },
    \\"build.client\\": {
      \\"executor\\": \\"@nx/vite:build\\",
      \\"options\\": {
        \\"outputPath\\": \\"dist/apps/myapp\\",
        \\"configFile\\": \\"apps/myapp/vite.config.ts\\"
      }
    },
    \\"build.ssr\\": {
      \\"executor\\": \\"@nx/vite:build\\",
      \\"defaultConfiguration\\": \\"preview\\",
      \\"options\\": {
        \\"outputPath\\": \\"dist/apps/myapp\\"
      },
      \\"configurations\\": {
        \\"preview\\": {
          \\"ssr\\": \\"src/entry.preview.tsx\\",
          \\"mode\\": \\"production\\"
        }
      }
    },
    \\"preview\\": {
      \\"executor\\": \\"@nx/vite:preview-server\\",
      \\"options\\": {
        \\"buildTarget\\": \\"myapp:build\\",
        \\"port\\": 4173
      }
    },
    \\"serve\\": {
      \\"executor\\": \\"@nx/vite:dev-server\\",
      \\"options\\": {
        \\"buildTarget\\": \\"myapp:build.client\\",
        \\"mode\\": \\"ssr\\",
        \\"port\\": 5173
      }
    },
    \\"serve.debug\\": {
      \\"executor\\": \\"nx:run-commands\\",
      \\"options\\": {
        \\"command\\": \\"node --inspect-brk ../../node_modules/vite/bin/vite.js --mode ssr --force\\",
        \\"cwd\\": \\"apps/myapp\\"
      }
    }
  },
  \\"tags\\": []
}
"
`;

exports[`qwik-nx generator should run successfully 3`] = `
Array [
  Object {
    "path": ".gitignore",
    "type": "CREATE",
  },
  Object {
    "path": ".prettierignore",
    "type": "CREATE",
  },
  Object {
    "path": ".prettierrc",
    "type": "CREATE",
  },
  Object {
    "path": "apps/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/.eslintrc.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/.prettierignore",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/package.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/project.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/public/favicon.svg",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/public/manifest.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/public/robots.txt",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/README.md",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/components/header/header.css",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/components/header/header.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/components/icons/qwik.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/components/router-head/router-head.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/entry.dev.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/entry.preview.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/entry.ssr.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/global.css",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/root.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/routes/flower/flower.css",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/routes/flower/index.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/routes/index.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/routes/layout.tsx",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/src/routes/service-worker.ts",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/tsconfig.app.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/tsconfig.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/tsconfig.spec.json",
    "type": "CREATE",
  },
  Object {
    "path": "apps/myapp/vite.config.ts",
    "type": "CREATE",
  },
  Object {
    "path": "libs/.gitignore",
    "type": "CREATE",
  },
  Object {
    "path": "nx.json",
    "type": "CREATE",
  },
  Object {
    "path": "package.json",
    "type": "CREATE",
  },
  Object {
    "path": "tsconfig.base.json",
    "type": "CREATE",
  },
]
`;
